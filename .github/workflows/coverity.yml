name: Coverity Scan

# We only want to test official release code, not every pull request.
on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:
    inputs:
      DPCPP_VERSION:
        description: "DPCPP version to use"
        type: string


permissions: read-all

jobs:
  coverity:
    runs-on: BMG
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Install Intel graphics drivers
        uses: ./.github/actions/install-intel-graphics
        with:
          GPU: BMG
          IGC: ROLLING

      - name: Install DPC++
        uses: ./.github/actions/install-dpcpp
        with:
          DPCPP_RELEASE: RELEASE
          DPCPP_VERSION: ${{ inputs.DPCPP_VERSION }}
          GPU: BMG
          IGC: ROLLING

      - name: Setup virtual environment
        shell: bash
        run: |
          # Install cmake and ninja if not already available
          if ! command -v cmake &> /dev/null || ! command -v ninja &> /dev/null; then
            echo "Installing cmake and/or ninja..."
            sudo apt update
            sudo apt install -y cmake ninja-build
          else
            echo "cmake and ninja already available"
          fi
          . setvars.sh
          export IGC_ExtraOCLOptions="-cl-intel-256-GRF-per-thread"
          export SYCL_PROGRAM_COMPILE_OPTIONS="-ze-opt-large-register-file -gline-tables-only"
          export ONEAPI_DEVICE_SELECTOR=level_zero:gpu
          export IGC_VectorAliasBBThreshold=100000000000
          # Persist environment variables to following steps 
          env >> $GITHUB_ENV
          which $CXX
          $CXX --version
          sycl-ls

      - name: Build
        shell: bash
        run: |
          cmake -G Ninja  \
            -DCUTLASS_ENABLE_SYCL=ON \
            -DDPCPP_SYCL_TARGET=intel_gpu_bmg_g21 \
            -DCMAKE_CXX_FLAGS="-Werror" \
            -DCUTLASS_SYCL_RUNNING_CI=ON

      - uses: vapier/coverity-scan-action@2068473c7bdf8c2fb984a6a40ae76ee7facd7a85 # v1.8.0
        with:
          email: ${{ secrets.COVERITY_SCAN_EMAIL }}
          token: ${{ secrets.COVERITY_SCAN_TOKEN }}
          command: cmake --build .
          working-directory: ''
